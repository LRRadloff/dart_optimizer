outer_ellipse_M <- ellipse(corr_M, level = 0.9)
outer_ellipse_df <- tibble(x = outer_ellipse_M[,1], y = outer_ellipse_M[,2])
ell_plt <- dart_board_plt +
geom_path(data = inner_ellipse_df, mapping = aes(x,y), color = 'red', linetype = 'dashed') +
geom_path(data = outer_ellipse_df, mapping = aes(x,y), color = 'red')
hoz_plt <-dart_board_plt +
geom_vline(xintercept = c(qnorm(1/6, sd = sd_horiz), qnorm(5/6, sd = sd_horiz)), color = 'red', linetype = 'dashed') +
geom_vline(xintercept = c(qnorm(1/20, sd = sd_horiz), qnorm(19/20, sd = sd_horiz)), color = 'red')
vert_plt <- dart_board_plt +
geom_hline(yintercept = c(qnorm(1/6, sd = sd_vert), qnorm(5/6, sd = sd_vert)), color = 'red', linetype = 'dashed') +
geom_hline(yintercept = c(qnorm(1/20, sd = sd_vert), qnorm(19/20, sd = sd_vert)), color = 'red')
grid.arrange(ell_plt, hoz_plt, vert_plt, ncol = 3)
})
output$target_optimizer <- renderPlot({
sd_horiz <- input$sd_horiz
sd_vert <- input$sd_vert
sim <- sim %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy,
res = dart_result(select(sim, x_sim, y_sim)))
sim_means <- sim %>%
group_by(x_target, y_target) %>%
summarize(mean_res = mean(res)) %>%
ungroup()
opt_target_df <- sim_means %>% slice_max(mean_res, n=1)
ggplot() +
geom_point(data = sim_means, mapping = aes(x = x_target, y = y_target, color = mean_res), alpha = 1) +
geom_point(data = opt_target_df, mapping = aes(x = x_target, y = y_target), color = 'red', shape = 4, size = 3, stroke = 2) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1)
})
}
# Run the application
shinyApp(ui = ui, server = server)
getwd()
sim <- crossing(poss_targets, norm_sim)
runApp()
sd_horiz <- 0.2
sd_vert <- 0.3
sim <- sim %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy,
res = dart_result(select(sim, x_sim, y_sim)))
############################
n_sim <- 2000
sd_horz <- 0.3
sd_vert <- 0.2
x_targets <- -40:40 / 40
y_targets <- -40:40 / 40
poss_targets <- crossing(x_target = x_targets, y_target = y_targets) %>%
filter(x_target^2 + y_target^2 < 1)
norm_sim <- tibble(dx = rnorm(n_sim), dy = rnorm(n_sim))
sim <- crossing(poss_targets, norm_sim)
sim <- sim %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy,
res = dart_result(select(sim, x_sim, y_sim)))
#Optimize target Point
sd_horiz <- 0.15
sd_vert <- 0.3
n_sim <- 2000
x_targets <- -40:40 / 40
y_targets <- -40:40 / 40
poss_targets <- crossing(x_target = x_targets, y_target = y_targets) %>%
filter(x_target^2 + y_target^2 < 1)
poss_targets %>% count()
norm_sim <- tibble(dx = rnorm(n_sim), dy = rnorm(n_sim))
sim <- crossing(poss_targets, norm_sim) %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy,
res = dart_result(select(sim, x_sim, y_sim)))
sim <- crossing(poss_targets, norm_sim) %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy)
sim <- crossing(poss_targets, norm_sim) %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy) %>%
mutate(res = dart_result(select(sim, x_sim, y_sim)))
sim_means <- sim %>%
group_by(x_target, y_target) %>%
summarize(mean_res = mean(res)) %>%
ungroup()
opt_target_df <- sim_means %>% slice_max(mean_res, n=1)
ggplot() +
geom_point(data = sim_means, mapping = aes(x = x_target, y = y_target, color = mean_res), alpha = 1) +
geom_point(data = opt_target_df, mapping = aes(x = x_target, y = y_target), color = 'red', shape = 4, size = 3, stroke = 2) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1)
runApp()
#Optimize target Point
sd_horiz <- 0.15
sd_vert <- 0.3
n_sim <- 2000
x_targets <- -40:40 / 40
y_targets <- -40:40 / 40
poss_targets <- crossing(x_target = x_targets, y_target = y_targets) %>%
filter(x_target^2 + y_target^2 < 1)
norm_sim <- tibble(dx = rnorm(n_sim), dy = rnorm(n_sim))
sim <- crossing(poss_targets, norm_sim) %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy) %>%
mutate(res = dart_result(select(sim, x_sim, y_sim)))
dart_result <- function(shots_df) {
pc <- polar_coords(shots_df)
r <- pc$r
phi <- pc$phi
phi <- phi/(2*pi) + 1/40
phi <- phi - floor(phi)
number <- numbers[ceiling(20 * phi)]
return(
case_when(
r < rings[1] ~ 50,
r < rings[2] ~ 25,
r < rings[3] ~ number,
r < rings[4] ~ 3* number,
r < rings[5] ~ number,
r < rings[6] ~ 2 * number,
TRUE ~ 0
)
)
}
sim <- crossing(poss_targets, norm_sim) %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy) %>%
mutate(res = dart_result(select(sim, x_sim, y_sim)))
library(tidyverse)
library(plotr)
polar_coords <- function(xy_df) {
x <- xy_df[[1]]
y <- xy_df[[2]]
r <- (x^2 + y^2)^(1/2)
phi <- if_else(
condition = y >= 0,
true = acos(x/r),
false = 2 * pi - acos(x/r)
)
return(tibble(r, phi))
}
cart_coords <- function(rphi_df) {
r <- rphi_df[[1]]
phi <- rphi_df[[2]]
x <- r * cos(phi)
y <- r * sin(phi)
return(tibble(x, y))
}
#TEST: polar_coords
x <- rnorm(100)
y <- rnorm(100)
test_df <- tibble(x, y)
test_df %>%
polar_coords() %>%
ggplot(aes(x = r, y = phi)) +
geom_point()
#TEST: cart_coords
test_df_rep <- test_df %>%
polar_coords() %>%
cart_coords()
all(test_df_rep - test_df < 0.0001)
#Assumption: dart board = unit circle
numbers <- c(6, 13, 4, 18, 1, 20, 5, 12, 9, 14, 11, 8, 16, 7, 19, 3, 17, 2, 15, 10)
rings <- c(6.35, 16, 99, 107, 162, 170)
rings <- rings / max(rings)
dart_result <- function(shots_df) {
pc <- polar_coords(shots_df)
r <- pc$r
phi <- pc$phi
phi <- phi/(2*pi) + 1/40
phi <- phi - floor(phi)
number <- numbers[ceiling(20 * phi)]
return(
case_when(
r < rings[1] ~ 50,
r < rings[2] ~ 25,
r < rings[3] ~ number,
r < rings[4] ~ 3* number,
r < rings[5] ~ number,
r < rings[6] ~ 2 * number,
TRUE ~ 0
)
)
}
#TEST; TEST
x <- runif(1000, min = -1, max = 1)
y <- runif(1000, min = -1, max = 1)
shots <- tibble(x,y) %>%
filter(x^2 + y^2 < 1)
shots %>% nrow()
shots %>% mutate(res = dart_result(shots)) %>%
group_by(res) %>% summarize(n() / nrow(shots))
#Optimize target Point
sd_horiz <- 0.15
sd_vert <- 0.3
n_sim <- 2000
x_targets <- -40:40 / 40
y_targets <- -40:40 / 40
poss_targets <- crossing(x_target = x_targets, y_target = y_targets) %>%
filter(x_target^2 + y_target^2 < 1)
ggplot() +
geom_point(data = poss_targets, mapping = aes(x = x_target, y = y_target), color = 'red',size = 0.5, shape = 4) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1)
## Get the plotting stuff right
library(ellipse)
library(ggforce)
library(gridExtra)
# data for drawing prediction ellipses
corr_M <- matrix(c(sd_horiz^2, 0, 0, sd_vert^2), ncol = 2)
inner_ellipse_M <- ellipse(corr_M, level = 2/3)
inner_ellipse_df <- tibble(x = inner_ellipse_M[,1], y = inner_ellipse_M[,2])
outer_ellipse_M <- ellipse(corr_M, level = 0.9)
outer_ellipse_df <- tibble(x = outer_ellipse_M[,1], y = outer_ellipse_M[,2])
# radii and center(s) of circles of dart board
circle_df = tibble(x = 0, y = 0, r = rings)
circle_df
ggplot() +
geom_point(data = poss_targets, mapping = aes(x = x_target, y = y_target), color = 'red',size = 0.5, shape = 4) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1)
# all end points of boarder lines within dart board
border_phis <- 2 * pi / 40 + 0:19 / 20 * 2*pi
inner_border_points <- cart_coords(tibble(r = rings[2], phi = border_phis))
outer_border_points <- cart_coords(tibble(r = 1, phi = border_phis)) %>%
rename(xend = x, yend = y)
border_df <- bind_cols(inner_border_points, outer_border_points)
#board numbers df
number_phis <- 0:19 / 20 * 2 * pi
board_numbers_df <- cart_coords(tibble(r = 1.05, phi = number_phis)) %>%
mutate(numbers = numbers)
# dart board creation
dart_board_plt <- ggplot()+ geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1) +
geom_text(data = board_numbers_df, mapping = aes(x = x, y = y, label = numbers))
dart_board_plt
ggplot() +
geom_point(data = poss_targets, mapping = aes(x = x_target, y = y_target), color = 'red',size = 0.5, shape = 4) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1)
poss_targets %>% count()
norm_sim <- tibble(dx = rnorm(n_sim), dy = rnorm(n_sim))
sim <- crossing(poss_targets, norm_sim) %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy) %>%
mutate(res = dart_result(select(sim, x_sim, y_sim)))
sim
norm_sim
crossing(poss_targets, norm_sim)
crossing(poss_targets, norm_sim) %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy)
crossing(poss_targets, norm_sim) %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy) %>%
mutate(res = dart_result(tibble(x_sim, y_sim)))
runApp()
runApp()
runApp()
runApp()
ggplot() +
geom_point(data = sim_means, mapping = aes(x = x_target, y = y_target, color = mean_res), alpha = 1) +
geom_point(data = opt_target_df, mapping = aes(x = x_target, y = y_target), color = 'red', shape = 4, size = 3, stroke = 2) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1)
o
ggplot() +
geom_point(data = sim_means, mapping = aes(x = x_target, y = y_target, color = mean_res), alpha = 1) +
geom_point(data = opt_target_df, mapping = aes(x = x_target, y = y_target), color = 'red', shape = 4, size = 3, stroke = 2) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1)
poss_targets %>% count()
norm_sim <- tibble(dx = rnorm(n_sim), dy = rnorm(n_sim))
sim <- crossing(poss_targets, norm_sim) %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy) %>%
mutate(res = dart_result(tibble(x_sim, y_sim)))
sim_means <- sim %>%
group_by(x_target, y_target) %>%
summarize(mean_res = mean(res)) %>%
ungroup()
opt_target_df <- sim_means %>% slice_max(mean_res, n=1)
opt_target_df
ggplot() +
geom_point(data = sim_means, mapping = aes(x = x_target, y = y_target, color = mean_res), alpha = 1) +
geom_point(data = opt_target_df, mapping = aes(x = x_target, y = y_target), color = 'red', shape = 4, size = 3, stroke = 2) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1)
ggplot() +
geom_point(data = sim_means, mapping = aes(x = x_target, y = y_target, color = mean_res), alpha = 1) +
geom_point(data = opt_target_df, mapping = aes(x = x_target, y = y_target), color = 'red', shape = 4, size = 3, stroke = 2) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1) +
scale_color_viridis_c(option = 'magma')
ggplot() +
geom_point(data = sim_means, mapping = aes(x = x_target, y = y_target, color = mean_res), alpha = 1) +
geom_point(data = opt_target_df, mapping = aes(x = x_target, y = y_target), color = 'red', shape = 4, size = 3, stroke = 2) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1) +
scale_color_gradient(low = 'blue', high = 'red')
ggplot() +
geom_point(data = sim_means, mapping = aes(x = x_target, y = y_target, color = mean_res), alpha = 1) +
geom_point(data = opt_target_df, mapping = aes(x = x_target, y = y_target), color = 'red', shape = 4, size = 3, stroke = 2) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1) +
scale_color_gradient(low = 'darkblue', high = 'red')
ggplot() +
geom_point(data = sim_means, mapping = aes(x = x_target, y = y_target, color = mean_res), alpha = 1) +
geom_point(data = opt_target_df, mapping = aes(x = x_target, y = y_target), color = 'red', shape = 4, size = 3, stroke = 2) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1) +
scale_color_viridis_c(option = 'magma')
ggplot() +
geom_point(data = sim_means, mapping = aes(x = x_target, y = y_target, color = mean_res), alpha = 1) +
geom_point(data = opt_target_df, mapping = aes(x = x_target, y = y_target), color = 'red', shape = 4, size = 3, stroke = 2) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1) +
scale_color_viridis_c(option = 'magma') +
geom_text(data = board_numbers_df, mapping = aes(x = x, y = y, label = numbers))
runApp()
seq(0.01, 0.7, 0.01)
length(seq(0.01, 0.7, 0.01))
70^2
norm_sim <- tibble(dx = rnorm(n_sim), dy = rnorm(n_sim))
sim <- crossing(poss_targets, norm_sim) %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy) %>%
mutate(res = dart_result(tibble(x_sim, y_sim)))
sim_means <- sim %>%
group_by(x_target, y_target) %>%
summarize(mean_res = mean(res)) %>%
ungroup()
opt_target_df <- sim_means %>% slice_max(mean_res, n=1)
opt_target_df
ggplot() +
geom_point(data = sim_means, mapping = aes(x = x_target, y = y_target, color = mean_res), alpha = 1) +
geom_point(data = opt_target_df, mapping = aes(x = x_target, y = y_target), color = 'red', shape = 4, size = 3, stroke = 2) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1) +
scale_color_viridis_c(option = 'magma') +
geom_text(data = board_numbers_df, mapping = aes(x = x, y = y, label = numbers))
n_sim <- 2500
x_targets <- -35:35 / 35
y_targets <- -35:35 / 35
poss_targets <- crossing(x_target = x_targets, y_target = y_targets) %>%
filter(x_target^2 + y_target^2 < 1)
ggplot() +
geom_point(data = poss_targets, mapping = aes(x = x_target, y = y_target), color = 'red',size = 0.5, shape = 4) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1)
#poss_targets %>% ggplot(aes(x_target,y_target)) + geom_point(col = 'blue', size = 0.3, alpha = 0.3)
poss_targets %>% count()
norm_sim <- tibble(dx = rnorm(n_sim), dy = rnorm(n_sim))
sim <- crossing(poss_targets, norm_sim) %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy) %>%
mutate(res = dart_result(tibble(x_sim, y_sim)))
sim_means <- sim %>%
group_by(x_target, y_target) %>%
summarize(mean_res = mean(res)) %>%
ungroup()
opt_target_df <- sim_means %>% slice_max(mean_res, n=1)
opt_target_df
ggplot() +
geom_point(data = sim_means, mapping = aes(x = x_target, y = y_target, color = mean_res), alpha = 1) +
geom_point(data = opt_target_df, mapping = aes(x = x_target, y = y_target), color = 'red', shape = 4, size = 3, stroke = 2) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1) +
scale_color_viridis_c(option = 'magma') +
geom_text(data = board_numbers_df, mapping = aes(x = x, y = y, label = numbers))
n_sim <- 2500
x_targets <- -35:35 / 35
y_targets <- -35:35 / 35
poss_targets <- crossing(x_target = x_targets, y_target = y_targets) %>%
filter(x_target^2 + y_target^2 < 1)
ggplot() +
geom_point(data = poss_targets, mapping = aes(x = x_target, y = y_target), color = 'red',size = 0.5, shape = 4) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1)
#poss_targets %>% ggplot(aes(x_target,y_target)) + geom_point(col = 'blue', size = 0.3, alpha = 0.3)
poss_targets %>% count()
norm_sim <- tibble(dx = rnorm(n_sim), dy = rnorm(n_sim))
sim <- crossing(poss_targets, norm_sim) %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy) %>%
mutate(res = dart_result(tibble(x_sim, y_sim)))
sim_means <- sim %>%
group_by(x_target, y_target) %>%
summarize(mean_res = mean(res)) %>%
ungroup()
opt_target_df <- sim_means %>% slice_max(mean_res, n=1)
opt_target_df
ggplot() +
geom_point(data = sim_means, mapping = aes(x = x_target, y = y_target, color = mean_res), alpha = 1) +
geom_point(data = opt_target_df, mapping = aes(x = x_target, y = y_target), color = 'red', shape = 4, size = 3, stroke = 2) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1) +
scale_color_viridis_c(option = 'magma') +
geom_text(data = board_numbers_df, mapping = aes(x = x, y = y, label = numbers))
n_sim <- 2500
x_targets <- -35:35 / 35
y_targets <- -35:35 / 35
poss_targets <- crossing(x_target = x_targets, y_target = y_targets) %>%
filter(x_target^2 + y_target^2 < 1)
ggplot() +
geom_point(data = poss_targets, mapping = aes(x = x_target, y = y_target), color = 'red',size = 0.5, shape = 4) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1)
#poss_targets %>% ggplot(aes(x_target,y_target)) + geom_point(col = 'blue', size = 0.3, alpha = 0.3)
poss_targets %>% count()
norm_sim <- tibble(dx = rnorm(n_sim), dy = rnorm(n_sim))
sim <- crossing(poss_targets, norm_sim) %>%
mutate(x_sim = x_target + sd_horiz * dx,
y_sim = y_target + sd_vert * dy) %>%
mutate(res = dart_result(tibble(x_sim, y_sim)))
sim_means <- sim %>%
group_by(x_target, y_target) %>%
summarize(mean_res = mean(res)) %>%
ungroup()
opt_target_df <- sim_means %>% slice_max(mean_res, n=1)
opt_target_df
ggplot() +
geom_point(data = sim_means, mapping = aes(x = x_target, y = y_target, color = mean_res), alpha = 1) +
geom_point(data = opt_target_df, mapping = aes(x = x_target, y = y_target), color = 'red', shape = 4, size = 3, stroke = 2) +
geom_circle(data = circle_df, mapping = aes(x0 = x, y0 = y, r = r)) +
geom_segment(data = border_df, mapping = aes(x = x, y = y, xend = xend, yend = yend)) +
theme_void() +
coord_fixed(xlim = c(-1, 1), ylim = c(-1,1)) +
theme(aspect.ratio=1) +
scale_color_viridis_c(option = 'magma') +
geom_text(data = board_numbers_df, mapping = aes(x = x, y = y, label = numbers))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
int(1.0)
integer(1.0)
integer(1.1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
